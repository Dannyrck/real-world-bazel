package(default_visibility = ["//visibility:public"])

load("@npm_angular_bazel//:index.bzl", "ng_module")
load("@npm_bazel_karma//:index.bzl", "ts_web_test_suite")
load("@build_bazel_rules_nodejs//:defs.bzl", "rollup_bundle", "history_server")
load("@build_bazel_rules_nodejs//internal/web_package:web_package.bzl", "web_package")
load("@npm_bazel_typescript//:index.bzl", "ts_devserver", "ts_library")
load("@io_bazel_rules_sass//:defs.bzl", "multi_sass_binary")

multi_sass_binary(
    name = "styles",
    srcs = glob(["**/*.scss"]),
)

ng_module(
    name = "src",
    srcs = glob(
        include = ["*.ts", "**/*.ts"],
        exclude = [
            "**/*.spec.ts",
            "main.ts",
            "test.ts",
            "initialize_testbed.ts",
        ],
    ),
    tsconfig = ":tsconfig.app.json",
    assets = glob([
      "**/*.css",
      "**/*.html",
    ]) + ([":styles"] if len(glob(["**/*.scss"])) else []),
    deps = [
        "@npm//@angular/core",
        "@npm//@angular/platform-browser",
        "@npm//@angular/router",
        "@npm//@angular/common",
        "@npm//@angular/forms",
        "@npm//@types",
        "@npm//marked",
        "//src/app/article",
        "//src/app/editor",
        "//src/app/profile",
        "//src/app/settings",
    ],
)

rollup_bundle(
    name = "bundle",
    entry_point = "src/main.prod",
    additional_entry_points = [
        "src/app/settings/settings.module.ngfactory",
        "src/app/profile/profile.module.ngfactory",
        "src/app/editor/editor.module.ngfactory",
        "src/app/article/article.module.ngfactory",
    ],
    deps = [
        "//src",
        "@npm//@angular/core",
        "@npm//@angular/platform-browser",
        "@npm//@angular/router",
        "@npm//@angular/common",
        "@npm//@angular/forms",
        "@npm//marked",
        "@npm//rxjs"
    ],
)

web_package(
    name = "prodapp",
    additional_root_paths = [
        "npm/node_modules/zone.js/dist",
        "npm/node_modules/systemjs/dist"
    ],
    assets = [
        # do not sort
        "@npm//node_modules/zone.js:dist/zone.min.js",
        "@npm//node_modules/systemjs:dist/system.js",
        ":bundle.min.js",
    ],
    data = [
        ":bundle",
        "favicon.ico"
    ],
    index_html = "index.html",
)

history_server(
    name = "prodserver",
    data = [":prodapp"],
    templated_args = ["src/prodapp"],
)

filegroup(
    name = "rxjs_umd_modules",
    srcs = [
        ":rxjs_shims.js",
        "@npm//node_modules/rxjs:bundles/rxjs.umd.js",
    ],
)

ts_devserver(
    name = "devserver",
    port = 4201,
    entry_module = "project/src/main.dev",
    scripts = [],
    static_files = [
        "@npm//node_modules/zone.js:dist/zone.min.js",
    ],
    data = [
        "favicon.ico",
    ],
    index_html = "index.html",
    deps = [
        "@npm//node_modules/tslib:tslib.js",
        "@npm//node_modules/@angular/core:bundles/core.umd.js",
        "@npm//node_modules/@angular/common:bundles/common.umd.js",
        "@npm//node_modules/@angular/common:bundles/common-http.umd.js",
        "@npm//node_modules/@angular/router:bundles/router.umd.js",
        "@npm//node_modules/@angular/forms:bundles/forms.umd.js",
        "@npm//node_modules/@angular/animations:bundles/animations.umd.js",
        "@npm//node_modules/@angular/animations:bundles/animations-browser.umd.js",
        "@npm//node_modules/@angular/router:router.ngfactory.js",
        "@npm//node_modules/@angular/platform-browser:bundles/platform-browser.umd.js",
        "@npm//node_modules/@angular/platform-browser:bundles/platform-browser-animations.umd.js",
        ":rxjs_umd_modules",
        "//src",
    ],
)

ts_library(
    name = "test_lib",
    testonly = 1,
    srcs = glob(["**/*.spec.ts"]),
    deps = [
        ":src",
        "@npm//@angular/core",
        "@npm//@types",
    ],
)

ts_library(
    name = "initialize_testbed",
    testonly = 1,
    srcs = [
        "initialize_testbed.ts",
    ],
    deps = [
        "@npm//@angular/core",
        "@npm//@angular/platform-browser-dynamic",
        "@npm//@types",
    ],
)

ts_web_test_suite(
    name = "test",
    srcs = [
        "@npm//node_modules/@angular/common:bundles/common.umd.js",
        "@npm//node_modules/@angular/compiler:bundles/compiler.umd.js",
        "@npm//node_modules/@angular/compiler:bundles/compiler-testing.umd.js",
        "@npm//node_modules/@angular/core:bundles/core.umd.js",
        "@npm//node_modules/@angular/core:bundles/core-testing.umd.js",
        "@npm//node_modules/@angular/platform-browser:bundles/platform-browser.umd.js",
        "@npm//node_modules/@angular/platform-browser:bundles/platform-browser-testing.umd.js",
        "@npm//node_modules/@angular/platform-browser-dynamic:bundles/platform-browser-dynamic.umd.js",
        "@npm//node_modules/@angular/platform-browser-dynamic:bundles/platform-browser-dynamic-testing.umd.js",
        "@npm//node_modules/tslib:tslib.js",
    ],
    runtime_deps = [
        ":initialize_testbed",
    ],
    # do not sort
    bootstrap = [
        "@npm//node_modules/zone.js:dist/zone-testing-bundle.js",
        "@npm//node_modules/reflect-metadata:Reflect.js",
    ],
    browsers = [
        "@io_bazel_rules_webtesting//browsers:chromium-local",
    ],
    deps = [
        ":rxjs_umd_modules",
        ":test_lib",
        "@npm//karma-jasmine",
    ],
)
